# differint changelog

## 0.1

2017-11-22

### Added

  - 'GL' - calculate GL differintegral

## 0.2

2017-11-24

### Added

  - 'RLtrap' - calculate RL differintegral using trapezoid rule
  - 'RLcoeff' - calculate coefficients for use in 'RLtrap'
  - 'checkvalues' - check for valid inputs for algorithms

### Modified

  - 'GL' - now works with 'checkvalues' to validate inputs
  
2018-01-29

### Added
  
  - 'GLI' - calculate improved GL differintegral
  - Unit tests for all core and auxiliary functions
  - 'GLIinterpolat' calculate interpolation coefficients for GLI algorithm
  - 'isInteger' for integer typechecking
  - 'functionCheck' for checking function input
  - 'test_func' for unittesting
  - 'RL' for calculating RL algorithm over array of function values
  - 'GL' for calculating GL algorithm over array of function values

### Modified

  - 'GL' now uses DFT for faster computation
  - 'GL' changed to 'GLpoint'
  - 'RLtrap' now called 'RLpoint'

2018-05-03

### Added 
  
  - 'CRONE' - calcualte GL differintegral operator using CRONE
  
2019-12-13
  
### Added
  
  - Added readme to github repository
  - Include future print function support
  
2022-11-13
  
### Added

  - 'isPositiveInteger' - check if a number is and integer and positive
  - 'PCsolver' - solve initial value fractional ODEs using the predictor-corrector method
  - Caputo differintegral using the L1, L2, and L2C methods
  
### Modified
  
 - Changed the way `isInteger` checks the given value
 - resolved bug in 'CRONE' method
 - updated Pochhammer symbol implementation to support a larger domain of inputs
 - 'checkValues' now supports numpy data types
 - 'Gamma' now uses `math.gamma` for real values to speed up computation

2023-05-10

### Added
  - 'GLreal' - is equivalent to the previous behavior of `GL`
  - '_0_i_Complex' - class which takes care of the exponent '0^i' by evaluating it as 0
  - various tests of the accuracy of complex order derivatives

### Modified
  - Updated `checkValues` to take a new keyword argument specifying if the given algorithm supports complex values of alpha
  - Changed implementation of `Gamma` to only use built-in `math.gamma` function if the input is within the range of supported inputs
  - 'GL' changed to support complex inputs. This has slightly worse accuracy for purely real inputs, so 'GLreal' added which only supports real inputs, as with before this update
  - Updated 'RL', 'RLpoint', and related helper functions to support complex inputs
  - Added support for complex alpha in CaputoL1point and CaputoL2point; however complex order derivative is not as well defined for Caputo differintegrals, so warnings have been added to those functions if complex alpha is used